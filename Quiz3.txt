--PART I

--1. Create a tablespace with name 'quiz' and three datafiles. Each datafile of 15Mb.
CREATE TABLESPACE quiz
    DATAFILE 'quiz.dbf' SIZE 15M,
             'quiz2.dbf' SIZE 15M,
             'quiz3.dbf' SIZE 15M;
    
 --2. Create a profile with idle time of 20 minutes, the name of the profile should be 'student'
CREATE PROFILE student LIMIT 
    IDLE_TIME                        20;   -- minutos

--3. Create an user named "usuario_1" with password "usuario_1". 
CREATE USER usuario_1
    IDENTIFIED BY usuario_1
    DEFAULT TABLESPACE quiz;
    -- The user should be able to connect
        GRANT CONNECT TO usuario_1; --Dar privilegio de session   
	-- The user should has the profile "student"        
	-- The user should be associated to the tablespace "quiz"
        ALTER USER usuario_1 PROFILE student;
	-- The user should be able to create tables WITHOUT USING THE DBA ROLE. 
        GRANT CREATE TABLE TO usuario_1;

--4. Create an user named "usuario_2" with password "usuario_2"
CREATE USER usuario_2
    IDENTIFIED BY usuario_2
    DEFAULT TABLESPACE quiz;
	-- The user should be able to connect
        GRANT CONNECT TO usuario_2; --Dar privilegio de session  
	-- The user should has the profile "student"
        ALTER USER usuario_2 PROFILE student;
	-- The user should be associated to the tablespace "quiz"
	-- The user shouldn't be able to create tables. 


--PART II
--1. With the usuario_1 create the next table (DON'T CHANGE THE NAME OF THE TABLE NOR COLUMNS: 
CREATE TABLE ATTACKS(
    ID INTEGER,
    URL VARCHAR2(2048),
    IP_ADDRESS VARCHAR2(255),
    NUMBER_OF_ATTACKS INTEGER,
    TIME_OF_LAST_ATTACK TIMESTAMP  
);
select * from ATTACKS;
--2. Import this data (The format of the date is "YYYY-MM-DD HH24:MI:SS"): https://gist.github.com/amartinezg/6c2c27ae630102dbfb499ed22b338dd8
--3. Give permission to view table "attacks" of the usuario_2 (Do selects)
 
 
-- PART III

--Queries: 

--1. Count the urls which have been attacked and have the protocol 'https'
SELECT COUNT (URL) 
    FROM ATTACKS
    WHERE NUMBER_OF_ATTACKS > 0 AND URL LIKE '%https%'; 
--2. List the records where the URL attacked matches with google (it does not matter if it is google.co.jp, google.es, google.pt, etc) order by number of attacks ascendent
SELECT ROWNUM URL, URL, NUMBER_OF_ATTACKS
    FROM ATTACKS
    WHERE URL LIKE '%google%'
    ORDER BY NUMBER_OF_ATTACKS ASC; 
--3. List the ip addresses and the time of the last attack if the attack has been produced the last year (2017) (Hint: https://stackoverflow.com/a/30071091)

--4. Show the first IP Adress which has been registered with the minimum number of attacks 

--5. Show the ip address and the number of attacks if instagram has been attack using https protocol
SELECT  IP_ADDRESS, NUMBER_OF_ATTACKS 
    FROM ATTACKS
    WHERE URL LIKE '%instagram%' AND URL LIKE '%https%'; 



       
    


    

